apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: smoke-override-pdb
spec:
  bindings:
    - name: WAREHOUSE_MINIO_USERNAME
      value: warehouse
    - name: WAREHOUSE_MINIO_PASSWORD
      value: warehouse123
    - name: WAREHOUSE_MINIO_BUCKET
      value: warehouse
    - name: MINIO_ROOT_USERNAME
      value: minioadmin
    - name: MINIO_ROOT_PASSWORD
      value: minioadmin
  steps:
  - name: install minio
    try:
    - apply:
        file: minio-install.yaml
    - assert:
        file: minio-install-assert.yaml
    - script:
        env:
          - name: NAMESPACE
            value: ($namespace)
          - name: MINIO_ROOT_USERNAME
            value: ($MINIO_ROOT_USERNAME)
          - name: MINIO_ROOT_PASSWORD
            value: ($MINIO_ROOT_PASSWORD)
          - name: WAREHOUSE_MINIO_BUCKET
            value: ($WAREHOUSE_MINIO_BUCKET)
        content: |
          set -ex
          echo "Preparing Minio S3 bucket"
          POD=$(kubectl -n $NAMESPACE get pod -l app.kubernetes.io/name=minio -o name | head -n 1 | sed -e 's#pod/##')
          kubectl cp -n $NAMESPACE --container sidecar yellow_tripdata_2021-07.csv $POD:/local-data
          kubectl -n $NAMESPACE exec $POD --container minio -- mc alias set local http://localhost:9000 $MINIO_ROOT_USERNAME $MINIO_ROOT_PASSWORD
          kubectl -n $NAMESPACE exec $POD --container minio -- mc cp /local-data/yellow_tripdata_2021-07.csv local/$WAREHOUSE_MINIO_BUCKET/taxi-data/
  - name: install hive
    try:
    - apply:
        file: minio-s3-connection.yaml
    - apply:
        file: hive.yaml
    - assert:
        timeout: 5m
        file: hive-assert.yaml
    catch:
      - sleep:
          duration: 5s
      - script:
          env:
            - name: NAMESPACE
              value: ($namespace)
          content: |
            set -ex
            kubectl -n $NAMESPACE get pods
      - describe:
          apiVersion: v1
          kind: Pod
          selector: app.kubernetes.io/instance=test-hive
      - podLogs:
          selector: app.kubernetes.io/instance=test-hive
          tail: -1
  - name: install trino
    try:
      - apply:
          file: trino.yaml
      - assert:
          file: trino-assert.yaml
  - name: access trino
    try:
    - script:
        env:
          - name: NAMESPACE
            value: ($namespace)
        content: |
          kubectl -n $NAMESPACE create configmap trino-access-scripts --from-file=check-active-workers.py --from-file=check-s3.py
    - sleep:
        duration: 5s
    - apply:
        file: trino-access.yaml
    - assert:
        timeout: 3m
        file: trino-access-assert.yaml
    catch:
      - describe:
          apiVersion: v1
          kind: Pod
          selector: app.kubernetes.io/name=trino-access
      - get:
          apiVersion: v1
          kind: Pod
          selector: app.kubernetes.io/name=trino-access
      - podLogs:
          selector: app.kubernetes.io/name=trino-access
          tail: -1
